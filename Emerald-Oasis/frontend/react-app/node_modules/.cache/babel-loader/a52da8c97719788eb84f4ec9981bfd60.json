{"ast":null,"code":"var _jsxFileName = \"F:\\\\Github\\\\Emerald-Oasis\\\\naitik_rathor\\\\react-app\\\\src\\\\pages\\\\employeeSide\\\\HomePage\\\\employeeHome.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport PlacedOrder from \"../../../components/PlacedOrders/placedOrders\";\nimport { URL } from \"../../../config\";\nimport '../../employeeSide/HomePage/employeeHome.css';\nimport { formatDate } from \"../../../utils\";\nimport { toast } from \"react-toastify\";\nimport UserHeader from \"../../../components/UserHeader/userHeader\";\nimport EmployeeHeader from \"../../../components/EmployeeHeader/employeeHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeeHome = () => {\n  _s();\n\n  const {\n    userId\n  } = sessionStorage;\n  const [orders, setOrders] = useState([]);\n  const [order, setOrder] = useState();\n  const [customer, setCustomer] = useState();\n  useEffect(() => {\n    getPlacedOrders();\n    getAcceptedOrder();\n  }, []);\n\n  const getAcceptedOrder = () => {\n    const url = `${URL}/employee/acceptedorder/${userId}`;\n    axios.get(url).then(response => {\n      const result = response.data;\n\n      if (result.status === 'success') {\n        setOrder(result.data);\n        console.log(result.data);\n        axios.get(`${URL}/employee/customer/${userId}`).then(res => {\n          const resu = res.data;\n\n          if (resu.status === 'success') {\n            setCustomer(resu.data);\n            console.log(resu.data);\n          }\n        });\n      }\n    });\n  };\n\n  const getPlacedOrders = () => {\n    const url = `${URL}/employee/getorders`;\n    axios.get(url).then(response => {\n      const result = response.data;\n\n      if (result.status === 'success') {\n        setOrders(result.data);\n        console.log(result.data);\n      } else {\n        console.log(result.error);\n      }\n    });\n  };\n\n  const confirmOrder = id => {\n    console.log(id);\n    const url = `${URL}/employee/confirmdelivery/${id}`;\n    axios.put(url).then(response => {\n      const result = response.data;\n\n      if (result.status == 'success') {\n        toast.success(\"Order delivered\");\n        window.location.reload(false);\n      } else {\n        toast.error(result.error);\n      }\n    });\n  };\n\n  const reportOrder = id => {\n    console.log(id);\n    const url = `${URL}/employee/reportorder/${id}`;\n    axios.put(url).then(response => {\n      const result = response.data;\n\n      if (result.status == 'success') {\n        toast.success(\"Order reported\");\n        window.location.reload(false);\n      } else {\n        toast.error(result.error);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(EmployeeHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), !order && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row orders\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Available Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: orders.map(order => {\n          return /*#__PURE__*/_jsxDEV(PlacedOrder, {\n            order: order\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 24\n    }, this), customer && order && order.orderStatus == 'ONTHEWAY' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row orders\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Accepted Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Ordered timestamp :-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), formatDate(order.orderedTimeStamp), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 87\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 93\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Delivery Address :-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), order.address, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 65\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 71\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Order total :-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), \"Rs. \", order.totalAmount, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 68\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 74\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            confirmOrder(order.orderId);\n          },\n          type: \"button\",\n          className: \"btn btn-success\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 83\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 90\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            reportOrder(order.orderId);\n          },\n          type: \"button\",\n          className: \"btn btn-danger\",\n          children: \"Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Customer name :-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), customer.firstName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 67\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 74\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Customer phone :-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), customer.phoneNo, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 66\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 73\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Customer email :-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), customer.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), orders.length == 0 && !order && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row orders\",\n      children: \"No orders available right now.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployeeHome, \"vSfAMHxZp3tiNCVkxHxIFwyDIk8=\");\n\n_c = EmployeeHome;\nexport default EmployeeHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeHome\");","map":{"version":3,"sources":["F:/Github/Emerald-Oasis/naitik_rathor/react-app/src/pages/employeeSide/HomePage/employeeHome.js"],"names":["axios","useEffect","useState","PlacedOrder","URL","formatDate","toast","UserHeader","EmployeeHeader","EmployeeHome","userId","sessionStorage","orders","setOrders","order","setOrder","customer","setCustomer","getPlacedOrders","getAcceptedOrder","url","get","then","response","result","data","status","console","log","res","resu","error","confirmOrder","id","put","success","window","location","reload","reportOrder","map","orderStatus","orderedTimeStamp","address","totalAmount","orderId","firstName","phoneNo","email","length"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport PlacedOrder from \"../../../components/PlacedOrders/placedOrders\"\r\nimport { URL } from \"../../../config\"\r\nimport '../../employeeSide/HomePage/employeeHome.css'\r\nimport { formatDate } from \"../../../utils\"\r\nimport { toast } from \"react-toastify\"\r\nimport UserHeader from \"../../../components/UserHeader/userHeader\"\r\nimport EmployeeHeader from \"../../../components/EmployeeHeader/employeeHeader\"\r\n\r\n\r\nconst EmployeeHome = () => {\r\n\r\n    const { userId } = sessionStorage\r\n    const [orders, setOrders] = useState([])\r\n    const [order, setOrder] = useState()\r\n    const [customer, setCustomer] = useState()\r\n\r\n    useEffect(() => {\r\n        getPlacedOrders()\r\n        getAcceptedOrder()\r\n    }, [])\r\n\r\n    const getAcceptedOrder = () => {\r\n        const url = `${URL}/employee/acceptedorder/${userId}`\r\n\r\n        axios.get(url).then((response) => {\r\n            const result = response.data\r\n            if (result.status === 'success') {\r\n                setOrder(result.data)\r\n                console.log(result.data)\r\n                axios.get(`${URL}/employee/customer/${userId}`).then((res) => {\r\n                    const resu = res.data\r\n                    if(resu.status === 'success') {\r\n                        setCustomer(resu.data)\r\n                        console.log(resu.data)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    const getPlacedOrders = () => {\r\n        const url = `${URL}/employee/getorders`\r\n\r\n        axios.get(url).then((response) => {\r\n            const result = response.data\r\n            if (result.status === 'success') {\r\n                setOrders(result.data)\r\n                console.log(result.data)\r\n            } else {\r\n                console.log(result.error)\r\n            }\r\n        })\r\n    }\r\n\r\n    const confirmOrder = (id) => {\r\n        console.log(id)\r\n        const url = `${URL}/employee/confirmdelivery/${id}`\r\n        axios.put(url).then((response) => {\r\n            const result = response.data\r\n            if(result.status == 'success') {\r\n                toast.success(\"Order delivered\")\r\n                window.location.reload(false)\r\n            } else {\r\n                toast.error(result.error)\r\n            }\r\n        })\r\n    }\r\n\r\n    const reportOrder = (id) => {\r\n        console.log(id)\r\n        const url = `${URL}/employee/reportorder/${id}`\r\n        axios.put(url).then((response) => {\r\n            const result = response.data\r\n            if(result.status == 'success') {\r\n                toast.success(\"Order reported\")\r\n                window.location.reload(false)\r\n            } else {\r\n                toast.error(result.error)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <EmployeeHeader></EmployeeHeader>\r\n            {!order && <div className=\"row orders\">\r\n                <h1>Available Orders</h1>\r\n                <hr />\r\n                <div className=\"col\">\r\n                    {orders.map((order) => {\r\n                        return <PlacedOrder order={order} ></PlacedOrder>\r\n                    })}\r\n                </div>\r\n            </div>}\r\n            {customer && order && order.orderStatus == 'ONTHEWAY' && \r\n            <div className=\"row orders\">\r\n                <h1>Accepted Order</h1>\r\n                <hr />\r\n                <div className=\"col\">\r\n                    <h6>Ordered timestamp :-</h6>{formatDate(order.orderedTimeStamp)} <br /><br />\r\n                    <h6>Delivery Address :-</h6>{order.address} <br /><br />\r\n                    <h6>Order total :-</h6>Rs. {order.totalAmount} <br /><br />\r\n                    <button onClick={() => {\r\n                        confirmOrder(order.orderId)\r\n                    }} type=\"button\" className=\"btn btn-success\">Confirm</button> <br /> <br />\r\n                    <button onClick={() => {\r\n                        reportOrder(order.orderId)\r\n                    }} type=\"button\" className=\"btn btn-danger\">Report</button>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <h6>Customer name :-</h6>{customer.firstName} <br /> <br />\r\n                    <h6>Customer phone :-</h6>{customer.phoneNo} <br /> <br />\r\n                    <h6>Customer email :-</h6>{customer.email} \r\n                </div>\r\n                <div className=\"col\"></div>\r\n            </div>}\r\n\r\n            {orders.length == 0 && !order &&\r\n            <div className=\"row orders\">\r\n                No orders available right now.\r\n            </div>}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeeHome"]},"metadata":{},"sourceType":"module"}