{"ast":null,"code":"var _jsxFileName = \"F:\\\\Github\\\\Emerald-Oasis\\\\Emerald-Oasis\\\\frontend\\\\react-app\\\\src\\\\pages\\\\adminSide\\\\ManageCust\\\\UserAllOrders\\\\userAllOrders.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport AdminHeader from \"../../../../components/AdminHeader/adminHeader\";\nimport { URL } from \"../../../../config\";\nimport '../Customers/customers.css';\nimport { formatDate } from \"../../../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserAllOrders = () => {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const [userOrders, setUserOrders] = useState([]);\n  const {\n    userId\n  } = state;\n  const navigate = useNavigate();\n\n  const getUserAllOrders = () => {\n    // /user/order/history/{userId}\n    const url = `${URL}/user/order/history/${userId}`;\n    axios.get(url).then(response => {\n      const result = response.data;\n\n      if (result['status'] == 'success') {\n        setUserOrders(result['data']);\n      } else {\n        toast.error(result['error']);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getUserAllOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(AdminHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"emp-details\",\n        children: \"All Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), userOrders.length < 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center fs-3 fw-light\",\n        children: \"There is no Order to show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), userOrders.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          class: \"table-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Order Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Ordered On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Delivered On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Total Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Order Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: userOrders.map(userOrder => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              onClick: () => {\n                // console.log(\"onclick\")\n                navigate('/userOrderDetails', {\n                  state: {\n                    custId: userOrder.userId,\n                    orderId: userOrder.orderId\n                  }\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: userOrder.orderId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(userOrder.orderedTimeStamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(userOrder.deliveredTimeStamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: userOrder.totalAmount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: userOrder.orderStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserAllOrders, \"wB5pa9yKuRuJ10KbsRZGZbaLXYU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = UserAllOrders;\nexport default UserAllOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAllOrders\");","map":{"version":3,"sources":["F:/Github/Emerald-Oasis/Emerald-Oasis/frontend/react-app/src/pages/adminSide/ManageCust/UserAllOrders/userAllOrders.js"],"names":["axios","useEffect","useState","useLocation","useNavigate","toast","AdminHeader","URL","formatDate","UserAllOrders","state","userOrders","setUserOrders","userId","navigate","getUserAllOrders","url","get","then","response","result","data","error","length","map","userOrder","custId","orderId","orderedTimeStamp","deliveredTimeStamp","totalAmount","orderStatus"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useLocation, useNavigate } from \"react-router\"\r\nimport { toast } from \"react-toastify\"\r\nimport AdminHeader from \"../../../../components/AdminHeader/adminHeader\"\r\nimport { URL } from \"../../../../config\"\r\nimport '../Customers/customers.css'\r\nimport { formatDate } from \"../../../../utils\"\r\n\r\nconst UserAllOrders = () => {\r\n    const { state } = useLocation()\r\n    const [userOrders, setUserOrders] = useState([])\r\n    const { userId } = state\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const getUserAllOrders = () => {\r\n        // /user/order/history/{userId}\r\n        const url = `${URL}/user/order/history/${userId}`\r\n        axios.get(url).then((response) => {\r\n            const result = response.data\r\n            if (result['status'] == 'success') {\r\n                setUserOrders(result['data'])\r\n            } else {\r\n                toast.error(result['error'])\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getUserAllOrders()\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <AdminHeader></AdminHeader>\r\n            <div className=\"main-div\">\r\n                <label className=\"emp-details\">All Orders</label>\r\n                {userOrders.length < 1 &&\r\n                    <div className=\"text-center fs-3 fw-light\">There is no Order to show</div>\r\n                }\r\n                {userOrders.length > 0 &&\r\n                    <table class=\"table\">\r\n                        <thead class=\"table-dark\">\r\n                            <tr>\r\n                                <td>Order Id</td>\r\n                                <td>Ordered On</td>\r\n                                <td>Delivered On</td>\r\n                                <td>Total Amount</td>\r\n                                <td>Order Status</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                userOrders.map((userOrder) => {\r\n                                    return (\r\n                                        <tr onClick={() => {\r\n                                            // console.log(\"onclick\")\r\n                                            navigate('/userOrderDetails', { state: { custId: userOrder.userId, orderId: userOrder.orderId } })\r\n                                        }}>\r\n\r\n                                            <td>{userOrder.orderId}</td>\r\n                                            <td>{formatDate(userOrder.orderedTimeStamp)}</td>\r\n                                            <td>{formatDate(userOrder.deliveredTimeStamp)}</td>\r\n                                            <td>{userOrder.totalAmount}</td>\r\n                                            <td>{userOrder.orderStatus}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default UserAllOrders"]},"metadata":{},"sourceType":"module"}