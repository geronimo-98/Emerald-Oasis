{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ratho\\\\Desktop\\\\CDAC Project\\\\Emerald-Oasis\\\\naitik_rathor\\\\react-app\\\\src\\\\components\\\\SignupModal\\\\signupModal.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupModal = () => {\n  _s();\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phoneNo, setPhoneNo] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const navigate = useNavigate();\n\n  const signupUser = () => {\n    if (firstName.length == 0) {\n      toast.warning('Enter First name');\n    } else if (email.length == 0) {\n      toast.warning('Enter Email');\n    } else if (phoneNo.length == 0) {\n      toast.warning('Enter Phone number');\n    } else if (password.length == 0) {\n      toast.warning('Enter Password');\n    } else if (confirmPassword.length == 0) {\n      toast.warning('Confirm Password');\n    } else if (password != confirmPassword) {\n      toast.error('Passwords do not match');\n    } else {\n      const body = {\n        firstName,\n        lastName,\n        email,\n        password,\n        phoneNo\n      };\n      const url = `${URL}/user/signup`;\n      axios.post(url, body).then(response => {\n        const result = response.data; // console.log(result)\n\n        if (result['status'] === 'success') {\n          toast.success('signup success');\n          navigate('/signin');\n        } else {\n          toast.error(result['error']);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignupModal, \"gtjE3Jo2zcVIZB1dzNXeCaycJBo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignupModal;\nexport default SignupModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupModal\");","map":{"version":3,"sources":["C:/Users/ratho/Desktop/CDAC Project/Emerald-Oasis/naitik_rathor/react-app/src/components/SignupModal/signupModal.js"],"names":["useState","useNavigate","SignupModal","firstName","setFirstName","lastName","setLastName","email","setEmail","phoneNo","setPhoneNo","password","setPassword","confirmPassword","setConfirmPassword","navigate","signupUser","length","toast","warning","error","body","url","URL","axios","post","then","response","result","data","success"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,cAA5B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,UAAU,GAAG,MAAM;AACrB,QAAIb,SAAS,CAACc,MAAV,IAAoB,CAAxB,EAA2B;AACvBC,MAAAA,KAAK,CAACC,OAAN,CAAc,kBAAd;AACH,KAFD,MAGK,IAAIZ,KAAK,CAACU,MAAN,IAAgB,CAApB,EAAuB;AACxBC,MAAAA,KAAK,CAACC,OAAN,CAAc,aAAd;AACH,KAFI,MAGA,IAAIV,OAAO,CAACQ,MAAR,IAAkB,CAAtB,EAAyB;AAC1BC,MAAAA,KAAK,CAACC,OAAN,CAAc,oBAAd;AACH,KAFI,MAGA,IAAIR,QAAQ,CAACM,MAAT,IAAmB,CAAvB,EAA0B;AAC3BC,MAAAA,KAAK,CAACC,OAAN,CAAc,gBAAd;AACH,KAFI,MAGA,IAAIN,eAAe,CAACI,MAAhB,IAA0B,CAA9B,EAAiC;AAClCC,MAAAA,KAAK,CAACC,OAAN,CAAc,kBAAd;AACH,KAFI,MAGA,IAAIR,QAAQ,IAAIE,eAAhB,EAAiC;AAClCK,MAAAA,KAAK,CAACE,KAAN,CAAY,wBAAZ;AACH,KAFI,MAGA;AACD,YAAMC,IAAI,GAAG;AACTlB,QAAAA,SADS;AAETE,QAAAA,QAFS;AAGTE,QAAAA,KAHS;AAITI,QAAAA,QAJS;AAKTF,QAAAA;AALS,OAAb;AAQA,YAAMa,GAAG,GAAI,GAAEC,GAAI,cAAnB;AAEAC,MAAAA,KAAK,CAACC,IAAN,CAAWH,GAAX,EAAgBD,IAAhB,EAAsBK,IAAtB,CAA4BC,QAAD,IAAc;AACrC,cAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAxB,CADqC,CAGrC;;AAEA,YAAID,MAAM,CAAC,QAAD,CAAN,KAAqB,SAAzB,EAAoC;AAChCV,UAAAA,KAAK,CAACY,OAAN,CAAc,gBAAd;AACAf,UAAAA,QAAQ,CAAC,SAAD,CAAR;AACH,SAHD,MAIK;AACDG,UAAAA,KAAK,CAACE,KAAN,CAAYQ,MAAM,CAAC,OAAD,CAAlB;AACH;AACJ,OAZD;AAaH;AACJ,GA5CD;;AA6CA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA7DD;;GAAM1B,W;UASeD,W;;;KATfC,W;AA+DN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\"\r\nimport { useNavigate } from \"react-router\"\r\n\r\nconst SignupModal = () => {\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phoneNo, setPhoneNo] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const signupUser = () => {\r\n        if (firstName.length == 0) {\r\n            toast.warning('Enter First name')\r\n        }\r\n        else if (email.length == 0) {\r\n            toast.warning('Enter Email')\r\n        }\r\n        else if (phoneNo.length == 0) {\r\n            toast.warning('Enter Phone number')\r\n        }\r\n        else if (password.length == 0) {\r\n            toast.warning('Enter Password')\r\n        }\r\n        else if (confirmPassword.length == 0) {\r\n            toast.warning('Confirm Password')\r\n        }\r\n        else if (password != confirmPassword) {\r\n            toast.error('Passwords do not match')\r\n        }\r\n        else {\r\n            const body = {\r\n                firstName,\r\n                lastName,\r\n                email,\r\n                password,\r\n                phoneNo\r\n            }\r\n\r\n            const url = `${URL}/user/signup`\r\n\r\n            axios.post(url, body).then((response) => {\r\n                const result = response.data\r\n\r\n                // console.log(result)\r\n\r\n                if (result['status'] === 'success') {\r\n                    toast.success('signup success')\r\n                    navigate('/signin')\r\n                }\r\n                else {\r\n                    toast.error(result['error'])\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignupModal"]},"metadata":{},"sourceType":"module"}