{"ast":null,"code":"var _jsxFileName = \"F:\\\\Github\\\\Emerald-Oasis\\\\naitik_rathor\\\\react-app\\\\src\\\\pages\\\\userSide\\\\MyOrders\\\\MyOrders.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\nimport Header1 from \"../../../components/UserHeader/userHeader\";\nimport axios from \"axios\";\nimport { URL } from \"../../../config\";\nimport Sidebar from \"../../../components/Sidebar/sidebar\";\nimport OrderTile from \"../../../components/OrderTile/orderTile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  conteinar: {\n    marginLeft: \"250px\",\n    marginTop: \"75px\" //backgroundColor: \"rgba(117, 190, 218, 0.5)\", //Light Blue Preferable\n\n  }\n};\n\nconst MyOrders = () => {\n  _s();\n\n  //  const { userId } = sessionStorage;\n  const userId = 5;\n  const [myOrders, setMyOrders] = useState([]);\n  const [requiredPgNum, setRequiredPgNum] = useState(1);\n\n  const getAllOrders = () => {\n    const url = `${URL}/user/order/history/${userId}`;\n    axios.get(url).then(response => {\n      const result = response.data;\n\n      if (result[\"status\"] == \"success\") {\n        setMyOrders(result[\"data\"]);\n      } else {\n        toast.error(result[\"error\"]);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getAllOrders();\n  }, []);\n\n  const displayNextPgTiles = e => {\n    requiredPgNum + 1 > lastPage ? setRequiredPgNum(1) : setRequiredPgNum(requiredPgNum + 1);\n  };\n\n  const displayPrevPgTiles = () => {\n    requiredPgNum - 1 > 0 ? setRequiredPgNum(requiredPgNum - 1) : setRequiredPgNum(lastPage);\n  };\n\n  var pageCounter = 1;\n  var lowerLimit;\n  var higherLimit;\n  let lastPage;\n  const ordersPerPage = 50; //change this in order to get different number of orders per page\n\n  var gotToNextPage = true;\n  console.log(\"gotToNextPage : \" + gotToNextPage + \"    requiredPgNum : \" + requiredPgNum);\n  return (\n    /*#__PURE__*/\n    //Make the tiles transparent, insert hovering features on card and text, use margin left in css instead of div, Add back like next link as well, if reached last page goTofirst page link\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: styles.conteinar,\n        children: [/*#__PURE__*/_jsxDEV(Header1, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: myOrders.map(myOrder => {\n            lowerLimit = ordersPerPage * (pageCounter - 1);\n            higherLimit = ordersPerPage * pageCounter;\n            var gotToNextPage = myOrder.orderId <= higherLimit ? lowerLimit <= myOrder.orderId : false;\n            var result = !gotToNextPage ? pageCounter++ && (lastPage = pageCounter) : pageCounter;\n\n            if (requiredPgNum === pageCounter) {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-4\",\n                  children: /*#__PURE__*/_jsxDEV(OrderTile, {\n                    order: myOrder\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row fixed-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              onClick: displayPrevPgTiles,\n              to: \"\",\n              style: {\n                fontWeight: \"bolder\",\n                fontSize: \"1.05em\",\n                float: \"right\"\n              },\n              children: \"Prev Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: \"bolder\",\n                fontSize: \"1.05em\",\n                float: \"right\"\n              },\n              children: requiredPgNum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-5\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              onClick: displayNextPgTiles,\n              to: \"\",\n              className: \"col-3\",\n              style: {\n                fontWeight: \"bolder\",\n                fontSize: \"1.05em\",\n                float: \"right\"\n              },\n              children: \"Next Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  );\n};\n\n_s(MyOrders, \"xW8/RYfvdZAUV2VOx8ersekqI1A=\");\n\n_c = MyOrders;\nexport default MyOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyOrders\");","map":{"version":3,"sources":["F:/Github/Emerald-Oasis/naitik_rathor/react-app/src/pages/userSide/MyOrders/MyOrders.js"],"names":["useEffect","useState","toast","Link","Header1","axios","URL","Sidebar","OrderTile","styles","conteinar","marginLeft","marginTop","MyOrders","userId","myOrders","setMyOrders","requiredPgNum","setRequiredPgNum","getAllOrders","url","get","then","response","result","data","error","displayNextPgTiles","e","lastPage","displayPrevPgTiles","pageCounter","lowerLimit","higherLimit","ordersPerPage","gotToNextPage","console","log","map","myOrder","orderId","fontWeight","fontSize","float"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header1 from \"../../../components/UserHeader/userHeader\";\r\nimport axios from \"axios\";\r\nimport { URL } from \"../../../config\";\r\n\r\nimport Sidebar from \"../../../components/Sidebar/sidebar\";\r\nimport OrderTile from \"../../../components/OrderTile/orderTile\";\r\n\r\nconst styles = {\r\n  conteinar: {\r\n    marginLeft: \"250px\",\r\n    marginTop: \"75px\",\r\n    //backgroundColor: \"rgba(117, 190, 218, 0.5)\", //Light Blue Preferable\r\n  },\r\n};\r\n\r\nconst MyOrders = () => {\r\n  //  const { userId } = sessionStorage;\r\n  const userId = 5;\r\n\r\n  const [myOrders, setMyOrders] = useState([]);\r\n  const [requiredPgNum, setRequiredPgNum] = useState(1);\r\n\r\n  const getAllOrders = () => {\r\n    const url = `${URL}/user/order/history/${userId}`;\r\n    axios.get(url).then((response) => {\r\n      const result = response.data;\r\n      if (result[\"status\"] == \"success\") {\r\n        setMyOrders(result[\"data\"]);\r\n      } else {\r\n        toast.error(result[\"error\"]);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllOrders();\r\n  }, []);\r\n\r\n  const displayNextPgTiles = (e) => {\r\n    requiredPgNum + 1 > lastPage\r\n      ? setRequiredPgNum(1)\r\n      : setRequiredPgNum(requiredPgNum + 1);\r\n  };\r\n\r\n  const displayPrevPgTiles = () => {\r\n    requiredPgNum - 1 > 0\r\n      ? setRequiredPgNum(requiredPgNum - 1)\r\n      : setRequiredPgNum(lastPage);\r\n  };\r\n\r\n  var pageCounter = 1;\r\n  var lowerLimit;\r\n  var higherLimit;\r\n  let lastPage;\r\n  const ordersPerPage = 50; //change this in order to get different number of orders per page\r\n  var gotToNextPage = true;\r\n\r\n  console.log(\r\n    \"gotToNextPage : \" + gotToNextPage + \"    requiredPgNum : \" + requiredPgNum\r\n  );\r\n\r\n  return (\r\n    //Make the tiles transparent, insert hovering features on card and text, use margin left in css instead of div, Add back like next link as well, if reached last page goTofirst page link\r\n    <>\r\n      <div className=\"container\" style={styles.conteinar}>\r\n        <Header1 />\r\n        <Sidebar />\r\n        <div className=\"row\">\r\n          {myOrders.map((myOrder) => {\r\n            lowerLimit = ordersPerPage * (pageCounter - 1);\r\n            higherLimit = ordersPerPage * pageCounter;\r\n            var gotToNextPage =\r\n              myOrder.orderId <= higherLimit\r\n                ? lowerLimit <= myOrder.orderId\r\n                : false;\r\n            var result = !gotToNextPage\r\n              ? pageCounter++ && (lastPage = pageCounter)\r\n              : pageCounter;\r\n\r\n            if (requiredPgNum === pageCounter) {\r\n              return (\r\n                <>\r\n                  <div className=\"col-4\">\r\n                    <OrderTile order={myOrder} />\r\n                  </div>\r\n                </>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n        <div className=\"row fixed-bottom\">\r\n          <div className=\"col-2\">\r\n            <Link\r\n              onClick={displayPrevPgTiles}\r\n              to=\"\"\r\n              style={{\r\n                fontWeight: \"bolder\",\r\n                fontSize: \"1.05em\",\r\n                float: \"right\",\r\n              }}\r\n            >\r\n              Prev Page\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <div\r\n              style={{\r\n                fontWeight: \"bolder\",\r\n                fontSize: \"1.05em\",\r\n                float: \"right\",\r\n              }}\r\n            >\r\n              {requiredPgNum}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-5\">\r\n            <Link\r\n              onClick={displayNextPgTiles}\r\n              to=\"\"\r\n              className=\"col-3\"\r\n              style={{\r\n                fontWeight: \"bolder\",\r\n                fontSize: \"1.05em\",\r\n                float: \"right\",\r\n              }}\r\n            >\r\n              Next Page\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default MyOrders;"]},"metadata":{},"sourceType":"module"}