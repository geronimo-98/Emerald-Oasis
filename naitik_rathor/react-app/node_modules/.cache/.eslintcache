<<<<<<< Updated upstream
<<<<<<< Updated upstream
[{"F:\\Github\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\userSide\\Welcome Page\\welcome.js":"1"},{"size":4479,"mtime":1648280267467,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"8ql9ea","F:\\Github\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\userSide\\Welcome Page\\welcome.js",["6","7"],{"ruleId":"8","severity":1,"message":"9","line":13,"column":71,"nodeType":"10","endLine":13,"endColumn":108},{"ruleId":"11","severity":1,"message":"12","line":29,"column":33,"nodeType":"10","endLine":29,"endColumn":68},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]
=======
[{"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\index.js":"1","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\App.js":"2","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\reportWebVitals.js":"3","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\config.js":"4","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\userSide\\Signin\\signin.js":"5","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\userSide\\Signup\\userSignup.js":"6","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\employeeSide\\Signup\\employeeSignup.js":"7","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\userSide\\Welcome Page\\welcome.js":"8"},{"size":500,"mtime":1642774830185,"results":"9","hashOfConfig":"10"},{"size":1247,"mtime":1643183102564,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1642774830283,"results":"12","hashOfConfig":"10"},{"size":42,"mtime":1642685982645,"results":"13","hashOfConfig":"10"},{"size":4048,"mtime":1643185190457,"results":"14","hashOfConfig":"10"},{"size":9229,"mtime":1643127964322,"results":"15","hashOfConfig":"10"},{"size":9456,"mtime":1643218594796,"results":"16","hashOfConfig":"10"},{"size":4479,"mtime":1648280743096,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"16qgzkf",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\index.js",[],["36","37"],"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\App.js",[],"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\reportWebVitals.js",[],"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\config.js",[],"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\userSide\\Signin\\signin.js",["38","39","40","41","42"],"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\userSide\\Signup\\userSignup.js",["43","44","45","46","47","48","49","50"],"import { Link, useNavigate } from \"react-router-dom\"\r\nimport { useEffect, useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { toast } from \"react-toastify\"\r\nimport { URL } from '../../../config'\r\nimport './userSignup.css'\r\nimport logo from '../../../assets/logo.png'\r\n\r\n\r\nconst SignupUser = () => {\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phoneNo, setPhoneNo] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const signupUser = () => {\r\n        if (firstName.length == 0) {\r\n            toast.warning('Enter First name')\r\n        }\r\n        else if (email.length == 0) {\r\n            toast.warning('Enter Email')\r\n        }\r\n        else if (phoneNo.length == 0) {\r\n            toast.warning('Enter Phone number')\r\n        }\r\n        else if (password.length == 0) {\r\n            toast.warning('Enter Password')\r\n        }\r\n        else if (confirmPassword.length == 0) {\r\n            toast.warning('Confirm Password')\r\n        }\r\n        else if (password != confirmPassword) {\r\n            toast.error('Passwords do not match')\r\n        }\r\n        else {\r\n            const body = {\r\n                firstName,\r\n                lastName,\r\n                email,\r\n                password,\r\n                phoneNo\r\n            }\r\n\r\n            const url = `${URL}/user/signup`\r\n\r\n            axios.post(url, body).then((response) => {\r\n                const result = response.data\r\n\r\n                console.log(result)\r\n\r\n                if (result['status'] === 'success') {\r\n                    toast.success('signup success')\r\n                    navigate('/signin')\r\n                }\r\n                else {\r\n                    toast.error(result['error'])\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"signupuser\">\r\n            <nav id=\"navbar-example2\" className=\"navbar fixed-top navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid navbar-items\">\r\n                    <a className=\"navbar-brand  mb-0 h1\" href=\"/\"><img src={logo} className=\"eologo\" /></a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo2\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse \" id=\"navbarTogglerDemo2\">\r\n                        <ul className=\"navbar-nav ms-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link \" href=\"/\">HOME</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\"></div>\r\n                    <div className=\"col\"></div>\r\n                    <div className=\"col\">\r\n                        <div className=\"form usersignupformmargin\">\r\n                            <div className=\"row\">\r\n                                <h1 className=\"usersignuptextheader\">Sign up</h1>\r\n                            </div>\r\n                            <hr className=\"usersignuptextheader\" />\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <div className=\"mb-3\"></div>\r\n                                    <div>\r\n                                        <label htmlFor=\"\" className=\"label-control usersignuptextbody\">First Name</label>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <input\r\n                                            onChange={(e) => {\r\n                                                setFirstName(e.target.value)\r\n                                            }}\r\n                                            type=\"text\" class=\"form-control usersignupinputbox\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <div className=\"mb-3\"></div>\r\n                                    <div>\r\n                                        <label htmlFor=\"\" className=\"label-control usersignuptextbody\">Last Name</label>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <input onChange={(e) => {\r\n                                            setLastName(e.target.value)\r\n                                        }} type=\"text\" class=\"form-control usersignupinputbox\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <div className=\"mb-3\"></div>\r\n                                    <div>\r\n                                        <label htmlFor=\"\" className=\"label-control usersignuptextbody\">Email</label>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <input\r\n                                            onChange={(e) => {\r\n                                                setEmail(e.target.value)\r\n                                            }}\r\n                                            type=\"email\" class=\"form-control usersignupinputbox\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <div className=\"mb-3\"></div>\r\n                                    <div>\r\n                                        <label htmlFor=\"\" className=\"label-control usersignuptextbody\">Phone number</label>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <input onChange={(e) => {\r\n                                            setPhoneNo(e.target.value)\r\n                                        }} type=\"text\" class=\"form-control usersignupinputbox\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <div className=\"mb-3\"></div>\r\n                                    <div>\r\n                                        <label htmlFor=\"\" className=\"label-control usersignuptextbody\">Password</label>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <input\r\n                                            onChange={(e) => {\r\n                                                setPassword(e.target.value)\r\n                                            }}\r\n                                            type=\"password\" class=\"form-control usersignupinputbox\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <div className=\"mb-3\"></div>\r\n                                    <div>\r\n                                        <label htmlFor=\"\" className=\"label-control usersignuptextbody\">Confirm password</label>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <input onChange={(e) => {\r\n                                            setConfirmPassword(e.target.value)\r\n                                        }} type=\"password\" class=\"form-control usersignupinputbox\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"mb-3\">\r\n                                <button onClick={signupUser} className=\"btn btn-primary\">\r\n                                    Signup\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <div className='usersignuptextbody'>\r\n                                    Already Having Account? <Link to=\"/signin\">Signin here</Link>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignupUser","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\employeeSide\\Signup\\employeeSignup.js",["51","52","53","54","55","56","57","58"],"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\userSide\\Welcome Page\\welcome.js",["59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":18,"column":22,"nodeType":"67","messageId":"68","endLine":18,"endColumn":24},{"ruleId":"65","severity":1,"message":"66","line":20,"column":32,"nodeType":"67","messageId":"68","endLine":20,"endColumn":34},{"ruleId":"65","severity":1,"message":"66","line":33,"column":30,"nodeType":"67","messageId":"68","endLine":33,"endColumn":32},{"ruleId":"69","severity":1,"message":"70","line":54,"column":57,"nodeType":"71","endLine":54,"endColumn":94},{"ruleId":"72","severity":1,"message":"73","line":76,"column":42,"nodeType":"74","messageId":"75","endLine":76,"endColumn":58},{"ruleId":"76","severity":1,"message":"77","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":22,"column":30,"nodeType":"67","messageId":"68","endLine":22,"endColumn":32},{"ruleId":"65","severity":1,"message":"66","line":25,"column":31,"nodeType":"67","messageId":"68","endLine":25,"endColumn":33},{"ruleId":"65","severity":1,"message":"66","line":28,"column":33,"nodeType":"67","messageId":"68","endLine":28,"endColumn":35},{"ruleId":"65","severity":1,"message":"66","line":31,"column":34,"nodeType":"67","messageId":"68","endLine":31,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":34,"column":41,"nodeType":"67","messageId":"68","endLine":34,"endColumn":43},{"ruleId":"65","severity":1,"message":"80","line":37,"column":27,"nodeType":"67","messageId":"68","endLine":37,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":71,"column":67,"nodeType":"71","endLine":71,"endColumn":104},{"ruleId":"65","severity":1,"message":"66","line":23,"column":30,"nodeType":"67","messageId":"68","endLine":23,"endColumn":32},{"ruleId":"65","severity":1,"message":"66","line":26,"column":34,"nodeType":"67","messageId":"68","endLine":26,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":29,"column":31,"nodeType":"67","messageId":"68","endLine":29,"endColumn":33},{"ruleId":"65","severity":1,"message":"66","line":32,"column":33,"nodeType":"67","messageId":"68","endLine":32,"endColumn":35},{"ruleId":"65","severity":1,"message":"66","line":35,"column":34,"nodeType":"67","messageId":"68","endLine":35,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":38,"column":41,"nodeType":"67","messageId":"68","endLine":38,"endColumn":43},{"ruleId":"65","severity":1,"message":"80","line":41,"column":27,"nodeType":"67","messageId":"68","endLine":41,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":75,"column":67,"nodeType":"71","endLine":75,"endColumn":104},{"ruleId":"69","severity":1,"message":"70","line":13,"column":71,"nodeType":"71","endLine":13,"endColumn":108},{"ruleId":"81","severity":1,"message":"82","line":29,"column":33,"nodeType":"71","endLine":29,"endColumn":68},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]
>>>>>>> Stashed changes
=======
[{"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\index.js":"1","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\App.js":"2","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\reportWebVitals.js":"3","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\config.js":"4","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\userSide\\Signin\\signin.js":"5","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\userSide\\Signup\\userSignup.js":"6","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\employeeSide\\Signup\\employeeSignup.js":"7","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\userSide\\Welcome Page\\welcome.js":"8"},{"size":500,"mtime":1642774830185,"results":"9","hashOfConfig":"10"},{"size":1247,"mtime":1643183102564,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1642774830283,"results":"12","hashOfConfig":"10"},{"size":42,"mtime":1642685982645,"results":"13","hashOfConfig":"10"},{"size":4048,"mtime":1643185190457,"results":"14","hashOfConfig":"10"},{"size":9229,"mtime":1643127964322,"results":"15","hashOfConfig":"10"},{"size":9456,"mtime":1643218594796,"results":"16","hashOfConfig":"10"},{"size":4479,"mtime":1648280743096,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"16qgzkf",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\index.js",[],["36","37"],"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\App.js",[],"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\reportWebVitals.js",[],"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\config.js",[],"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\userSide\\Signin\\signin.js",["38","39","40","41","42"],"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\userSide\\Signup\\userSignup.js",["43","44","45","46","47","48","49","50"],"import { Link, useNavigate } from \"react-router-dom\"\r\nimport { useEffect, useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { toast } from \"react-toastify\"\r\nimport { URL } from '../../../config'\r\nimport './userSignup.css'\r\nimport logo from '../../../assets/logo.png'\r\n\r\n\r\nconst SignupUser = () => {\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phoneNo, setPhoneNo] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const signupUser = () => {\r\n        if (firstName.length == 0) {\r\n            toast.warning('Enter First name')\r\n        }\r\n        else if (email.length == 0) {\r\n            toast.warning('Enter Email')\r\n        }\r\n        else if (phoneNo.length == 0) {\r\n            toast.warning('Enter Phone number')\r\n        }\r\n        else if (password.length == 0) {\r\n            toast.warning('Enter Password')\r\n        }\r\n        else if (confirmPassword.length == 0) {\r\n            toast.warning('Confirm Password')\r\n        }\r\n        else if (password != confirmPassword) {\r\n            toast.error('Passwords do not match')\r\n        }\r\n        else {\r\n            const body = {\r\n                firstName,\r\n                lastName,\r\n                email,\r\n                password,\r\n                phoneNo\r\n            }\r\n\r\n            const url = `${URL}/user/signup`\r\n\r\n            axios.post(url, body).then((response) => {\r\n                const result = response.data\r\n\r\n                console.log(result)\r\n\r\n                if (result['status'] === 'success') {\r\n                    toast.success('signup success')\r\n                    navigate('/signin')\r\n                }\r\n                else {\r\n                    toast.error(result['error'])\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"signupuser\">\r\n            <nav id=\"navbar-example2\" className=\"navbar fixed-top navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid navbar-items\">\r\n                    <a className=\"navbar-brand  mb-0 h1\" href=\"/\"><img src={logo} className=\"eologo\" /></a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo2\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse \" id=\"navbarTogglerDemo2\">\r\n                        <ul className=\"navbar-nav ms-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link \" href=\"/\">HOME</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\"></div>\r\n                    <div className=\"col\"></div>\r\n                    <div className=\"col\">\r\n                        <div className=\"form usersignupformmargin\">\r\n                            <div className=\"row\">\r\n                                <h1 className=\"usersignuptextheader\">Sign up</h1>\r\n                            </div>\r\n                            <hr className=\"usersignuptextheader\" />\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <div className=\"mb-3\"></div>\r\n                                    <div>\r\n                                        <label htmlFor=\"\" className=\"label-control usersignuptextbody\">First Name</label>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <input\r\n                                            onChange={(e) => {\r\n                                                setFirstName(e.target.value)\r\n                                            }}\r\n                                            type=\"text\" class=\"form-control usersignupinputbox\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <div className=\"mb-3\"></div>\r\n                                    <div>\r\n                                        <label htmlFor=\"\" className=\"label-control usersignuptextbody\">Last Name</label>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <input onChange={(e) => {\r\n                                            setLastName(e.target.value)\r\n                                        }} type=\"text\" class=\"form-control usersignupinputbox\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <div className=\"mb-3\"></div>\r\n                                    <div>\r\n                                        <label htmlFor=\"\" className=\"label-control usersignuptextbody\">Email</label>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <input\r\n                                            onChange={(e) => {\r\n                                                setEmail(e.target.value)\r\n                                            }}\r\n                                            type=\"email\" class=\"form-control usersignupinputbox\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <div className=\"mb-3\"></div>\r\n                                    <div>\r\n                                        <label htmlFor=\"\" className=\"label-control usersignuptextbody\">Phone number</label>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <input onChange={(e) => {\r\n                                            setPhoneNo(e.target.value)\r\n                                        }} type=\"text\" class=\"form-control usersignupinputbox\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <div className=\"mb-3\"></div>\r\n                                    <div>\r\n                                        <label htmlFor=\"\" className=\"label-control usersignuptextbody\">Password</label>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <input\r\n                                            onChange={(e) => {\r\n                                                setPassword(e.target.value)\r\n                                            }}\r\n                                            type=\"password\" class=\"form-control usersignupinputbox\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <div className=\"mb-3\"></div>\r\n                                    <div>\r\n                                        <label htmlFor=\"\" className=\"label-control usersignuptextbody\">Confirm password</label>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <input onChange={(e) => {\r\n                                            setConfirmPassword(e.target.value)\r\n                                        }} type=\"password\" class=\"form-control usersignupinputbox\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"mb-3\">\r\n                                <button onClick={signupUser} className=\"btn btn-primary\">\r\n                                    Signup\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <div className='usersignuptextbody'>\r\n                                    Already Having Account? <Link to=\"/signin\">Signin here</Link>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignupUser","C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\employeeSide\\Signup\\employeeSignup.js",["51","52","53","54","55","56","57","58"],"C:\\Users\\ratho\\Desktop\\CDAC Project\\Emerald-Oasis\\naitik_rathor\\react-app\\src\\pages\\userSide\\Welcome Page\\welcome.js",["59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":18,"column":22,"nodeType":"67","messageId":"68","endLine":18,"endColumn":24},{"ruleId":"65","severity":1,"message":"66","line":20,"column":32,"nodeType":"67","messageId":"68","endLine":20,"endColumn":34},{"ruleId":"65","severity":1,"message":"66","line":33,"column":30,"nodeType":"67","messageId":"68","endLine":33,"endColumn":32},{"ruleId":"69","severity":1,"message":"70","line":54,"column":57,"nodeType":"71","endLine":54,"endColumn":94},{"ruleId":"72","severity":1,"message":"73","line":76,"column":42,"nodeType":"74","messageId":"75","endLine":76,"endColumn":58},{"ruleId":"76","severity":1,"message":"77","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":22,"column":30,"nodeType":"67","messageId":"68","endLine":22,"endColumn":32},{"ruleId":"65","severity":1,"message":"66","line":25,"column":31,"nodeType":"67","messageId":"68","endLine":25,"endColumn":33},{"ruleId":"65","severity":1,"message":"66","line":28,"column":33,"nodeType":"67","messageId":"68","endLine":28,"endColumn":35},{"ruleId":"65","severity":1,"message":"66","line":31,"column":34,"nodeType":"67","messageId":"68","endLine":31,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":34,"column":41,"nodeType":"67","messageId":"68","endLine":34,"endColumn":43},{"ruleId":"65","severity":1,"message":"80","line":37,"column":27,"nodeType":"67","messageId":"68","endLine":37,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":71,"column":67,"nodeType":"71","endLine":71,"endColumn":104},{"ruleId":"65","severity":1,"message":"66","line":23,"column":30,"nodeType":"67","messageId":"68","endLine":23,"endColumn":32},{"ruleId":"65","severity":1,"message":"66","line":26,"column":34,"nodeType":"67","messageId":"68","endLine":26,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":29,"column":31,"nodeType":"67","messageId":"68","endLine":29,"endColumn":33},{"ruleId":"65","severity":1,"message":"66","line":32,"column":33,"nodeType":"67","messageId":"68","endLine":32,"endColumn":35},{"ruleId":"65","severity":1,"message":"66","line":35,"column":34,"nodeType":"67","messageId":"68","endLine":35,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":38,"column":41,"nodeType":"67","messageId":"68","endLine":38,"endColumn":43},{"ruleId":"65","severity":1,"message":"80","line":41,"column":27,"nodeType":"67","messageId":"68","endLine":41,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":75,"column":67,"nodeType":"71","endLine":75,"endColumn":104},{"ruleId":"69","severity":1,"message":"70","line":13,"column":71,"nodeType":"71","endLine":13,"endColumn":108},{"ruleId":"81","severity":1,"message":"82","line":29,"column":33,"nodeType":"71","endLine":29,"endColumn":68},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]
>>>>>>> Stashed changes
